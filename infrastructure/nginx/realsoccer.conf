# realsoccer/infrastructure/nginx/realsoccer.conf
# Nginx configuration for the Real Soccer application.
# This config serves the React frontend and proxies API requests to the Node.js backend.

# Upstream for the Node.js backend server
upstream realsoccer_backend {
    # If running with Docker Compose, this would be the service name
    # server server:5000;
    # If running locally, or in Kubernetes with a service name
    server realsoccer_server:5000; # Assuming 'realsoccer_server' is the service name/hostname
}

server {
    listen 80; # Listen on port 80 for HTTP traffic
    listen [::]:80; # Listen on IPv6

    server_name localhost; # Replace with your domain name in production (e.g., realsoccer.com)

    # Root directory for the client application (React build)
    root /usr/share/nginx/html; # This is where Dockerfile copies the client build

    # Index file to serve
    index index.html index.htm;

    # Serve static files for the React app
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Proxy API requests to the backend server
    location /api/ {
        proxy_pass http://realsoccer_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        # Add other proxy headers as needed
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Optional: Proxy Swagger UI documentation
    location /api-docs/ {
        proxy_pass http://realsoccer_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Error pages
    error_page 404 /404.html;
    location = /404.html {
        internal;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        internal;
    }
}